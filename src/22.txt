 
escreveHexa:
        enter 0,0
        mov eax, [ebp+8]
        push dword 10
        mov esi, esp

_printEAXloop:
        sub edx, edx
        mov ebx, 16
        div ebx

        cmp edx, 10
        jge _letra

        add edx, 48 ; ascii for '0'
_continue:

        push edx  
    
        cmp eax, 0
        jne _printEAXloop

_printEAXloop2:
        mov eax, 4
        mov ebx, 1 ; ecx is already defined
        mov ecx, esp
        mov edx, 1
        int 80h

        pop ecx
        cmp esp, esi
        jbe _printEAXloop2

        leave
        ret

_letra:
        add edx, 55
        jmp _continue
